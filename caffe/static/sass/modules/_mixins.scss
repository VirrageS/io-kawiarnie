/**
  TRANSITION
  **/

@mixin transition($transition...) {
  -moz-transition:    $transition;
  -o-transition:      $transition;
  -webkit-transition: $transition;
  transition:         $transition;
}

@mixin media-query($device) {
  @media screen and (max-width: $device) {
    @content;
  }
}

/**
  POSITION
  **/

@mixin position($position, $args) {
  $offsets: top right bottom left;

  @each $o in $offsets {
    $i: index($args, $o);

    @if $i
    and $i + 1 <= length($args)
    and type-of( nth($args, $i + 1) ) == number {
      #{$o}: nth($args, $i + 1);
    }
  }

  position: $position;
}

@mixin absolute($args) {
  @include position(absolute, $args);
}

@mixin fixed($args) {
  @include position(fixed, $args);
}

@mixin relative($args) {
  @include position(relative, $args);
}

/**
  BORDER
  **/

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;

  background-clip: padding-box;
}

@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
          border-top-right-radius: $radius;
   -webkit-border-top-left-radius: $radius;
           border-top-left-radius: $radius;

  background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
          border-bottom-right-radius: $radius;
     -webkit-border-top-right-radius: $radius;
             border-top-right-radius: $radius;

  background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
          border-bottom-right-radius: $radius;
   -webkit-border-bottom-left-radius: $radius;
           border-bottom-left-radius: $radius;

  background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
          border-bottom-left-radius: $radius;
     -webkit-border-top-left-radius: $radius;
             border-top-left-radius: $radius;

  background-clip: padding-box;
}

/**
  OPACITY
  **/

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}


/**
  BOX SIZING
  **/

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}


/**
  CLEARFIX
  **/

@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}
